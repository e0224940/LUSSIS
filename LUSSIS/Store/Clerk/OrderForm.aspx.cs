using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using LUSSIS_Backend;
using LUSSIS_Backend.model;
using LUSSIS_Backend.controller;

public partial class Store_Clerk_OrderForm : System.Web.UI.Page
{
    protected List<OrderItem> orderList;
    protected List<StationeryCatalogue> stockList;
    protected List<Supplier> supplierList;
    int orderedBy;
    int approvedBy;
    DateTime dateIssued;

    protected void Page_Load(object sender, EventArgs e)
    {
        if (!IsPostBack)
        {
            // Set OrderList
            orderList = new List<OrderItem>();

            // Set StockList
            stockList = OrderController.GetAllStocks();

            // Set SupplierList
            supplierList = OrderController.GetAllSuppliers();

            // Load OrderList
            LoadOrderList(orderList);

            // Load StockList
            LoadStockList(stockList);

            //Load SupplierList
            LoadSupplierList(supplierList);
        }
    }

    protected void BlankButton_Click(object sender, EventArgs e)
    {
        // Set OrderList to Empty
        orderList = new List<OrderItem>();

        // Set StockList to All
        stockList = OrderController.GetAllStocks();

        // Load OrderList
        LoadOrderList(orderList);

        // Load StockList
        LoadStockList(stockList);
    }

    protected void AutoGenerateButton_Click(object sender, EventArgs e)
    {
        // Set OrderList
        orderList = OrderController.GetAutoGeneratedOrderList();

        // Set StockList
        stockList = OrderController.GetUnselectedStocks(orderList);

        // Load OrderList
        LoadOrderList(orderList);

        // Load StockList
        LoadStockList(stockList);
    }

    protected void AddButton_Click(object sender, EventArgs e)
    {
        try
        {
            // Get OrderList from Page
            orderList = GetOrderListFromPage();
        }
        catch (Exception exception)
        {
            Session["Error"] = "An Error Has Occured: " + exception.Message;
        }

        if (Session["Error"] == null)
        {
            // Add New Item to OrderList
            string itemNo = StockDropDownList.SelectedValue;
            if (!itemNo.Equals(""))
            {
                OrderController.AddOrder(orderList, itemNo);
            }

            // Get Stocklist
            stockList = OrderController.GetUnselectedStocks(orderList);

            // Load OrderList
            LoadOrderList(orderList);

            // Load StockList
            LoadStockList(stockList);
        }
    }

    protected void DeleteButton_Click(object sender, EventArgs e)
    {
        try
        {
            // Get OrderList from Page
            orderList = GetOrderListFromPage();
        }
        catch (Exception exception)
        {
            Session["Error"] = "An Error Has Occured: " + exception.Message;
        }

        if (Session["Error"] == null)
        {
            // Delete item from OrderList
            string itemNo = ((Button)sender).CommandArgument;
            for (int i = 0; i < orderList.Count; i++)
            {
                OrderItem oI = orderList[i];
                if (oI.ItemNo == itemNo)
                {
                    orderList.Remove(oI);
                    break;
                }
            }

            // Get Stocklist
            stockList = OrderController.GetUnselectedStocks(orderList);

            // Load OrderList
            LoadOrderList(orderList);

            // Load StockList
            LoadStockList(stockList);
        }
    }

    protected void SubmitButton_Click(object sender, EventArgs e)
    {
        // Get Submission Data
        orderedBy = Profile.EmpNo;
        approvedBy = OrderController.GetStoreSupervisorEmpNo();
        dateIssued = DateTime.Today;

        try
        {
            // Get OrderList from Page
            orderList = GetOrderListFromPage();

            // Submit Order
            OrderController.SubmitOrder(orderList, orderedBy, dateIssued);
        }
        catch (Exception exception)
        {
            Session["Error"] = "An Error Has Occured: " + exception.Message;
        }

        if (Session["Error"] == null)
        {
            // Show Success Message
            Session["OProcessed"] = true;
            Response.Redirect("OrderForm.aspx");
        }
    }

    protected void SupplierDropDownList_SelectedIndexChanged(object sender, EventArgs e)
    {
        if (!SupplierDropDownList.SelectedValue.Equals(""))
        {
            Supplier selectedSupplier = OrderController.GetSupplier(SupplierDropDownList.SelectedValue);
            SupplierTextBox.Text = selectedSupplier.ContactName;
            ContactTextBox.Text = selectedSupplier.PhoneNo.ToString();
        }
    }

    private List<OrderItem> GetOrderListFromPage()
    {
        orderList = new List<OrderItem>();
        RepeaterItemCollection items = Repeater1.Items;

        // For each Repeater Item
        for (int i = 0; i < items.Count; i++)
        {
            RepeaterItem rI = items[i];
            string itemNo = (rI.FindControl("ItemNoLabel") as Label).Text;
            StationeryCatalogue stock = OrderController.GetStock(itemNo);

            // Create OrderItem
            OrderItem oI = new OrderItem(stock);
            oI.Qty1 = Convert.ToInt32((rI.FindControl("Qty1TextBox") as TextBox).Text);
            oI.Qty2 = Convert.ToInt32((rI.FindControl("Qty2TextBox") as TextBox).Text);
            oI.Qty3 = Convert.ToInt32((rI.FindControl("Qty3TextBox") as TextBox).Text);

            orderList.Add(oI);
        }

        return orderList;
    }

    private void LoadOrderList(List<OrderItem> orderList)
    {
        List<OrderItem> sortedOrderList = orderList.OrderBy(x => x.ItemNo).ToList<OrderItem>();
        Repeater1.DataSource = sortedOrderList;
        Repeater1.DataBind();
        if (orderList.Count == 0)
        {
            SubmitButton.Enabled = false;
        }
        else
        {
            SubmitButton.Enabled = true;
        }
    }

    private void LoadStockList(List<StationeryCatalogue> stockList)
    {
        StockDropDownList.DataValueField = "ItemNo";
        StockDropDownList.DataTextField = "Description";
        stockList.Insert(0, new StationeryCatalogue() { ItemNo = "", Description = "Select Item" });
        StockDropDownList.DataSource = stockList;
        StockDropDownList.DataBind();
    }

    private void LoadSupplierList(List<Supplier> supplierList)
    {
        SupplierDropDownList.DataValueField = "SupplierCode";
        SupplierDropDownList.DataTextField = "SupplierName";
        supplierList.Insert(0, new Supplier() { SupplierName = "Select Supplier", SupplierCode = "" });
        SupplierDropDownList.DataSource = supplierList;
        SupplierDropDownList.DataBind();
    }
}